view: agencies {
  dimension: id {
    primary_key: yes
    description: "Internal agency ID number, auto generated by Clarity (HMIS Data Element 2.1.1)"
    type: number
    sql: ${TABLE}.id ;;
  }

  dimension: agency_id {
    description: "Internal agency ID number, auto generated by Clarity (HMIS Data Element 2.1.1)"
    sql: ${id} ;;
  }

  dimension_group: added {
    type: time
    timeframes: [time, date, week, month]
    sql: ${TABLE}.added_date ;;
  }

  dimension: address {
    sql: ${TABLE}.address ;;
  }

  dimension: city {
    sql: ${TABLE}.city ;;
  }

  dimension: clients {
    hidden: yes
    type: number
    sql: ${TABLE}.clients ;;
  }

  dimension: coc {
    label: "CoC Code"
    description: "The agency's Continuum of Care code, listed on the agency's Overview tab"
    bypass_suggest_restrictions: yes
    sql: ${TABLE}.coc ;;
  }

  dimension: department {
    label: "Departments Enabled/Disabled"

    case: {
      when: {
        sql: ${TABLE}.department = 1 ;;
        label: "Enabled"
      }

      when: {
        sql: ${TABLE}.department = 0 ;;
        label: "Disabled"
      }

      else: "Disabled"
    }
  }

  dimension_group: last_updated {
    type: time
    timeframes: [time, date, week, month]
    sql: ${TABLE}.last_updated ;;
  }

  dimension: name {
    label: "Agency Name"
    bypass_suggest_restrictions: yes
    description: "Agency name (HMIS Data Element 2.1.2)"
    sql: ${TABLE}.name ;;
  }

  dimension: ref_county {
    hidden: yes
    type: number
    sql: ${TABLE}.ref_county ;;
  }

  dimension: county {
    description: "Agency County designated on Agency Overview screen"
    sql: ${counties.name} ;;
  }

  dimension: ref_navigation_profile {
    hidden: yes
    type: number
    sql: ${TABLE}.ref_navigation_profile ;;
  }

  dimension: ref_profile_screen {
    hidden: yes
    sql: ${TABLE}.ref_profile_screen ;;
  }

  dimension: profile_screen {
    label: "Default Profile Screen"
    sql: ${screens_default_profile.name} ;;
  }

  dimension: ref_user_updated {
    label: "User Updating"
    sql: fn_getUserNameById(${TABLE}.ref_user_updated) ;;
  }

  dimension: state {
    sql: ${TABLE}.state ;;
  }

  dimension: status {
    label: "Agency Active?"
    description: "Is agency Active on Agency Overview screen"

    case: {
      when: {
        sql: ${TABLE}.status = 1 ;;
        label: "Active"
      }

      when: {
        sql: ${TABLE}.status = 2 ;;
        label: "Inactive"
      }
    }
  }

  dimension: zip {
    type: zipcode
    sql: ${TABLE}.zip ;;
  }

  measure: count {
    type: count
    drill_fields: [id, name]
  }
}
